kube-state-metrics:
  enabled: true
  image:
    tag: v2.6.0
kubeEvents:
  enabled: true
logging:
  enabled: true
newrelic-infrastructure:
  privileged: true
newrelic-logging:
  lowDataMode: false
newrelic-prometheus-agent:
  config:
    kubernetes:
      integrations_filter:
        enabled: false
  enabled: true
  lowDataMode: true
kubelet:
  enabled: true
  # -- Enable kubelet monitoring.
  # Advanced users only. Setting this to `false` is not supported and will break the New Relic experience.

  # -- Volumes to mount in the containers
  extraVolumes: 
    - configMap:
        name: postgres-queries
      name: psql    
      ports:
      - containerPort: 80
  # -- Defines where to mount volumes specified with `extraVolumes`
  extraVolumeMounts:
    - mountPath: /var/tmp/postgresql
      name: psql

# -- Config files for other New Relic integrations that should run in this cluster.
integrations:
# If you wish to monitor services running on Kubernetes you can provide integrations
# configuration under `integrations`. You just need to create a new entry where
# the key is the filename of the configuration file and the value is the content of
# the integration configuration.
# The data is the actual integration configuration as described in the spec here:
# https://docs.newrelic.com/docs/integrations/integrations-sdk/file-specifications/integration-configuration-file-specifications-agent-v180
# For example, if you wanted to monitor a Redis instance that has a label "app=sampleapp"
# you could do so by adding following entry:
 nri-postgresql:
   discovery:
     command:
       # Run NRI Discovery for Kubernetes
       # https://github.com/newrelic/nri-discovery-kubernetes
       exec: /var/db/newrelic-infra/nri-discovery-kubernetes
       match:
         label.app: postgresql
   integrations:
     - name: nri-postgresql
       env:
         # using the discovered IP as the hostname address
         USERNAME: postgres
         PASSWORD: pass
         HOSTNAME: psql-sample.localnet
         PORT: 6432
         DATABASE: postgres

         COLLECT_DB_LOCK_METRICS: false
         COLLECTION_LIST: ALL
         CUSTOM_METRICS_CONFIG: "config/postgresql-custom-query.yml"
         TIMEOUT:  10
       interval: 15s
       labels:
         env: production
         role: postgresql
       inventory_source: config/postgresql