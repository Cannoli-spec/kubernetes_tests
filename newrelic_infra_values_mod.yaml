newrelic-infrastructure:
  verboseLog: true
  privileged: true
  kubelet:
    extraVolumeMounts:
    - mountPath: /config
      name: psql-vol
    extraVolumes:
    - name: psql-vol
      configMap:
        name: psql-config
  integrations:    
    postgresql-config.yml:    
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.app: postgres
      integrations:
        - name: nri-postgresql
          env:
            COLLECT_DB_LOCK_METRICS: false
            COLLECTION_LIST: all
            CUSTOM_METRICS_CONFIG: /config/postgresql-custom-query.yml
            DATABASE: postgres
            HOSTNAME: ${discovery.ip}
            #HOSTNAME: psql-sample.localnet
            PORT: 5432
            USERNAME: admin
            PASSWORD: psltest
            TIMEOUT: 10
          interval: 15s
          inventory_source: config/postgresql
          labels:
            env: production
            role: postgresql
    nri-rabbitmq-workshop:
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.component: rabbitmq
      integrations:
      - env:
          HOSTNAME: ${discovery.ip}
          PASSWORD: bitnami
          PORT: 15672
          QUEUES: '["message"]'
          USERNAME: user
        labels:
          role: rabbitmq
        name: nri-rabbitmq
    nri-redis:
      discovery:
        command:
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port 10250 --tls
          match:
            label.app: redis
      integrations:
      - env:
          HOSTNAME: ${discovery.ip}
          KEYS: '{"0":["<KEY_1>"],"1":["<KEY_2>"]}'
          PORT: 6379
          REMOTE_MONITORING: true
        labels:
          app: redis
          role: primary
        name: nri-redis
  privileged: true
newrelic-logging:
  fluentBit:
    config:
      filters: |
        [FILTER]
            Name                kubernetes
            Match               kube.*
            # We need the full DNS suffix as Windows only supports resolving names with this suffix
            # See: https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#dns-limitations
            Kube_URL            https://kubernetes.default.svc.cluster.local:443
            Buffer_Size         ${K8S_BUFFER_SIZE}
            K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}
            K8S-Logging.Parser On

        [FILTER]
            Name           record_modifier
            Match          *
            Record         cluster_name ${CLUSTER_NAME}

        [FILTER]
            Name    grep
            Match   *
            Exclude $kubernetes['namespace_name'] olm
            Exclude $kubernetes['namespace_name'] demo
            Exclude $kubernetes['namespace_name'] px-operator
            Exclude $kubernetes['namespace_name'] kube-system
    criEnabled: true
    k8sLoggingExclude: "On"
prometheus:
  enabled: false            